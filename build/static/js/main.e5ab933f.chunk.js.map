{"version":3,"sources":["components/TodoList.js","components/AddTodo.js","components/Nav.js","config.js","components/TodoDetail.js","components/EditTodo.js","components/SignIn.js","components/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["TodoList","props","todos","map","todo","i","key","to","_id","name","AddTodo","loggedInUser","onSubmit","onAdd","className","htmlFor","type","id","Nav","onClick","onLogout","API_URL","process","TodoDetail","state","handleDeleteTodo","match","params","axios","delete","config","withCredentials","then","afterDelete","catch","err","response","status","history","push","this","get","res","setState","data","role","description","React","Component","EditTodo","handleEdit","e","preventDefault","patch","handleNameChange","newTodo","JSON","parse","stringify","target","value","handleDescChange","class","onChange","SignIn","onSignIn","aria-describedby","SignUp","onSignUp","App","getTodos","handleAddTodo","post","handleDelete","newTodos","filter","console","log","handleLogout","document","cookie","handleSignIn","email","password","handleSignUp","username","getUser","exact","path","render","routeProps","withRouter","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e5ab933f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function TodoList(props){\r\n    return (\r\n        <>\r\n            {\r\n                props.todos.map((todo, i) => {\r\n                    return <p key={i}><Link to={`/todo/${todo._id}`}>{todo.name}</Link></p>\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default function AddTodo(props){\r\n\r\n    if (!props.loggedInUser) {\r\n        return <Redirect to='/sign-in' />\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={props.onAdd}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"name\" id=\"name\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"description\" id=\"description\" />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Create</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Nav(props){\r\n    return (\r\n        <ul className=\"nav \">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link active myContainer\" to=\"/\">Todos</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/add-form\">Add Todo</Link>\r\n            </li>\r\n            {\r\n                props.loggedInUser ? (\r\n                    <li className=\"nav-item\">\r\n                            <button className=\"nav-link\" onClick={props.onLogout}>Logout</button>\r\n                    </li>\r\n                ) : (\r\n                    <>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/sign-in\">SignIn</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/sign-up\">SignUp</Link>\r\n                        </li>\r\n                    </>\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}","export default {\r\n    // API_URL: process.env.API_URL || 'http://localhost:5000/api'\r\n    API_URL: process.env.API_URL || 'https://capstone-sample-manish.herokuapp.com/api'\r\n}","import React from 'react';\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\nimport config from '../config'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default class TodoDetail extends React.Component{\r\n\r\n    state = {\r\n        todo: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        let id = this.props.match.params.id\r\n        axios.get(`${config.API_URL}/todos/${id}`, { withCredentials: true})\r\n            .then((res) => {\r\n                this.setState({\r\n                    todo: res.data\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                if(err.response.status === 401) {\r\n                  this.props.history.push('/sign-in')\r\n                }\r\n              })\r\n    }\r\n\r\n    handleDeleteTodo = () => {\r\n        let id = this.props.match.params.id\r\n        axios.delete(`${config.API_URL}/todos/${id}`, { withCredentials: true})\r\n            .then(() => {\r\n               // we will redirect here\r\n               this.props.afterDelete(id)\r\n            })\r\n            .catch((err) => {\r\n                if(err.response.status === 401) {\r\n                    this.props.history.push('/sign-in')\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        if (!this.props.loggedInUser) {\r\n            return <Redirect to='/sign-in' />\r\n        }\r\n        if (!this.state.todo){\r\n            return(\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        const {name, description} = this.state.todo\r\n        let id = this.props.match.params.id\r\n        return (\r\n            <>\r\n               <p>{name}</p>\r\n               <p>{description}</p>\r\n               <button type=\"submit\" className=\"btn btn-primary\">\r\n                   <Link to={`/todo/${id}/edit`}>Edit</Link>\r\n               </button>\r\n               <button onClick={this.handleDeleteTodo} type=\"submit\" className=\"btn btn-primary\">Delete</button>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport config from '../config'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class EditTodo extends React.Component {\r\n\r\n    state = {\r\n        todo: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        let id = this.props.match.params.id\r\n        axios.get(`${config.API_URL}/todos/${id}`, {withCredentials: true})\r\n            .then((res) => {\r\n                this.setState({\r\n                    todo: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    handleEdit = (e) => {\r\n        e.preventDefault();\r\n        let id = this.props.match.params.id\r\n        axios.patch(`${config.API_URL}/todos/${id}`, {\r\n            name: this.state.todo.name,\r\n            description: this.state.todo.description\r\n        }, {withCredentials: true})\r\n            .then((res) => {\r\n               //redirect to App.js\r\n            })\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n        let newTodo = JSON.parse(JSON.stringify(this.state.todo))\r\n        newTodo.name = e.target.value\r\n\r\n        this.setState({\r\n            todo: newTodo\r\n        })\r\n    }\r\n\r\n    handleDescChange = (e) => {\r\n        let newTodo = JSON.parse(JSON.stringify(this.state.todo))\r\n        newTodo.description = e.target.value\r\n\r\n        this.setState({\r\n            todo: newTodo\r\n        })\r\n    }\r\n    \r\n\r\n    render(){\r\n        if (!this.props.loggedInUser) {\r\n            return <Redirect to='/sign-in' />\r\n        }\r\n        if (!this.state.todo){\r\n            return(\r\n                <div class=\"text-center\">\r\n                    <div class=\"spinner-border\" role=\"status\">\r\n                        <span class=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        const {name, description} = this.state.todo\r\n        return (\r\n            <>\r\n                <form >\r\n                    <div class=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" class=\"form-control\" \r\n                        onChange={this.handleNameChange} name=\"name\" id=\"name\" value={name}/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label htmlFor=\"description\">Description</label>\r\n                        <input type=\"text\" class=\"form-control\"  onChange={this.handleDescChange} name=\"description\" id=\"description\" value={description}/>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" onClick={this.handleEdit}>Submit</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function SignIn(props){\r\n    return (\r\n        <form onSubmit={props.onSignIn}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function SignUp(props){\r\n    return (\r\n        <form onSubmit={props.onSignUp}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputUsername\">Username</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername\" name=\"username\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form>\r\n    )\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './App.css'\nimport {Switch, Route} from 'react-router-dom' \nimport TodoList from './components/TodoList';\nimport AddTodo from './components/AddTodo';\nimport Nav from './components/Nav'\nimport axios from 'axios'\nimport TodoDetail from './components/TodoDetail'\nimport EditTodo from './components/EditTodo'\nimport {withRouter} from 'react-router-dom'\nimport SignIn from './components/SignIn';\nimport SignUp from './components/SignUp';\nimport config from './config';\n\nclass App extends React.Component {\n\n  state = {\n    todos: [],\n    loggedInUser: null\n  }\n\n  getTodos = () => {\n    axios.get(`${config.API_URL}/todos`)\n      .then((res) => {\n        this.setState({\n          todos: res.data\n        })\n      })\n      .catch((err) => {\n        if(err.response.status === 401) {\n          this.props.history.push('/sign-in')\n        }\n      })  \n  }\n\n  getUser(){\n    axios.get(`${config.API_URL}/user`, {withCredentials: true})\n    .then((res) => {\n      this.setState({\n        loggedInUser: res.data\n      })\n    })\n    .catch((err) => {\n      if(err.response.status === 401) {\n        this.props.history.push('/sign-in')\n      }\n    })  \n  }\n\n  componentDidMount(){\n    this.getTodos();\n    if (!this.state.loggedInUser) {\n      this.getUser();\n    }\n  }\n\n\n  handleAddTodo = (e) => {\n      e.preventDefault()\n      let name = e.target.name.value\n      let description = e.target.description.value\n\n      axios.post(`${config.API_URL}/create`, {\n        name: name,\n        description: description\n      }, {withCredentials: true})\n      .then((res) => {\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        }, () => {\n          this.props.history.push('/')\n        })\n        // this.setState({} , function)\n      })\n      .catch((err) => {\n        if(err.response.status === 401) {\n          this.props.history.push('/sign-in')\n        }\n      })\n  }\n\n  handleDelete = (id) => {\n      //filter todos\n      let newTodos = this.state.todos.filter((todo) => {\n          return todo._id !== id\n      })\n\n      this.setState({\n        todos: newTodos\n      }, () => {\n        this.props.history.push('/')\n      })\n      console.log(this.state.todos)\n  }\n\n  handleLogout = () => {\n    console.log(document.cookie)\n    axios.post(`${config.API_URL}/logout`, {}, { withCredentials: true})\n    .then((res) => {\n      console.log(res)\n      this.setState({\n        loggedInUser: null\n      }, () => {\n        this.props.history.push('/')\n      })\n    })\n  }\n\n  handleSignIn = (e) => {\n    e.preventDefault();\n    let email = e.target.email.value;\n    let password = e.target.password.value\n    \n    axios.post(`${config.API_URL}/signin`, {\n      email: email,\n      password: password\n    })\n    .then((res) => {\n      this.setState({\n        loggedInUser: res.data\n      }, () => {\n        this.props.history.push('/')\n      })\n    })\n  }\n\n  handleSignUp = (e) => {\n    e.preventDefault()\n    let email = e.target.email.value;\n    let username = e.target.username.value\n    let password = e.target.password.value\n    axios.post(`${config.API_URL}/signup`, {\n      email: email,\n      username: username,\n      password: password\n    }, { withCredentials: true})\n    .then((res) => {\n        this.setState({\n          loggedInUser: res.data\n        }, () => {\n          this.props.history.push('/')\n        })\n    })\n  }\n\n  render(){\n    const {loggedInUser} = this.state\n    return (\n      <>\n        <Nav loggedInUser={this.state.loggedInUser} onLogout={this.handleLogout}/>\n        <h3>My Shopping List</h3>\n        <Switch>\n            <Route exact path=\"/\"  render={() => {\n              return <TodoList  \n                  todos={this.state.todos} \n                />\n            }}/>\n            <Route path=\"/add-form\" render={(routeProps) => {\n              return <AddTodo \n                  loggedInUser={loggedInUser} \n                  onAdd={this.handleAddTodo} \n                  {...routeProps} \n              />\n            }}/>\n           <Route exact path=\"/todo/:id\" render={(routeProps) => {\n              return <TodoDetail \n                loggedInUser={loggedInUser} \n                afterDelete={this.handleDelete} \n                {...routeProps} \n              />\n            }}/>\n            <Route path=\"/todo/:id/edit\" render={(routeProps) => {\n              return <EditTodo \n                loggedInUser={loggedInUser} \n                {...routeProps} \n              />\n            }}/>\n            <Route path=\"/sign-in\" render={(routeProps) => {\n              return <SignIn \n                onSignIn={this.handleSignIn} \n                {...routeProps} \n              />\n            }}/>\n            <Route path=\"/sign-up\" render={(routeProps) => {\n              return <SignUp onSignUp={this.handleSignUp} {...routeProps} />\n            }}/>\n        </Switch>\n      </> \n    )\n  }\n};\n\n\nexport default withRouter(App)\n\n//Higher Order Component","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}